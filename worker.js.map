{"version":3,"sources":["webpack://antischwitzomatclient/./src/worker.js"],"names":["cacheNames","code","asset","resources","self","__WB_MANIFEST","addEventListener","event","dividedAssets","reduce","acc","next","url","indexOf","push","definedCaches","name","assets","waitUntil","tasks","map","async","cache","caches","open","c","addAll","Array","from","Set","Promise","all","request","mode","respondWith","match","then","response","fetch","method","cacheName","console","log","storedCaches","keys","expectedCaches","Object","values","filter","delete","data","text","options","body","icon","badge","registration","showNotification","rootUrl","URL","location","href","notification","close","clients","matchAll","matchedClients","client","startsWith","u","length","substring","focus","openWindow","headers","JSON","stringify","old_endpoint","oldSubscription","endpoint","new_endpoint","newSubscription","new_p256dh","toJSON","p256dh","new_auth","auth","ok","Error","statusText","catch","error"],"mappings":"yBAAA,IAAI,EAAa,CACb,KAAM,gDACN,MAAO,YAGP,EAAY,29BAAK,cAErB,KAAK,iBAAiB,WAAW,SAAU,GACvC,IAAI,EAAgB,EAAU,QAAO,CAAC,EAAK,KACnC,EAAK,IAAI,QAAQ,cAAgB,EACjC,EAAI,MAAM,KAAK,EAAK,KAGpB,EAAI,KAAK,KAAK,EAAK,KAEhB,IACR,CAAE,MAAO,GAAI,KAAM,KAClB,EAAgB,CAChB,CACI,KAAM,EAAW,KACjB,OAAQ,IACD,EAAc,OAGzB,CACI,KAAM,EAAW,MACjB,OAAQ,EAAc,QAG9B,EAAM,UAAU,WACZ,IAAI,EAAQ,EAAc,KAAI,UAC1B,IAAI,QAAc,OAAO,KAAK,EAAE,YAC1B,EAAM,OAAO,MAAM,KAAK,IAAI,IAAI,EAAE,SAAS,UAE/C,QAAQ,IAAI,EACrB,EANe,GAOpB,IAGA,KAAK,iBAAiB,SAAS,SAAU,GACrC,GAA2B,aAAvB,EAAM,QAAQ,KASlB,EAAM,YACF,OAAO,MAAM,EAAM,SAAS,MAAK,MAAO,GAChC,SAIgB,MAAM,EAAM,gBAfxC,CACI,GAA6B,QAAzB,EAAM,QAAQ,OACd,OAEJ,EAAM,YAAY,OAAO,MAAM,aAAc,CAAE,UAAW,EAAW,OAAQ,MAAK,GACvE,GAAY,MAAM,EAAM,WAGvC,CAYJ,IAEA,KAAK,iBAAiB,YAAY,SAAU,GACxC,QAAQ,IAAI,4BACZ,EAAM,UAAU,WACZ,IAAI,QAAqB,OAAO,OAC5B,EAAiB,OAAO,OAAO,GAC/B,EAAQ,EAAa,QAAO,GAAK,EAAe,QAAQ,GAAK,IAAG,KAAI,gBAC9D,OAAO,OAAO,EAAE,UAEpB,QAAQ,IAAI,EACrB,EAPe,GAQpB,IAGA,KAAK,iBAAiB,QAAQ,IAC1B,QAAQ,IAAI,iBACZ,QAAQ,IAAI,EAAM,KAAK,QACvB,MACM,EAAU,CACZ,KAAM,EAAM,KAAK,OACjB,KAAM,sCACN,MAAO,uCAGX,EAAM,UACF,KAAK,aAAa,iBARR,kBAQgC,GAC7C,IAWL,KAAK,iBAAiB,qBAAqB,IACvC,MAAM,EAAU,IAAI,IAAI,IAAW,UAAU,KAC7C,EAAM,aAAa,QACnB,EAAM,UAAU,QAAQ,WAAW,MAAK,IACpC,IAAK,IAAI,KAAU,EAEf,GADA,QAAQ,IAAI,wBAAwB,EAAO,YAAY,MAClD,EAAO,KAAM,IAAI,YAbZ,EAaoC,GAZhD,OAAS,GAAsB,KAAjB,EAAE,EAAE,OAAO,GACpB,EAAE,UAAU,EAAG,EAAE,OAAO,GAE5B,GAUK,OAAO,EAAO,QAd9B,IAAsB,EAkBd,OADA,QAAQ,IAAI,aACL,QAAQ,WAAW,IAAU,IAEvC,IAIL,KAAK,iBAAiB,0BAA0B,SAAU,GACtD,EAAM,UACF,MAAM,2DAA4D,CAC9D,OAAQ,OACR,QAAS,CAAE,eAAgB,oBAC3B,KAAM,KAAK,UAAU,CACjB,aAAc,EAAM,gBAAkB,EAAM,gBAAgB,SAAW,KACvE,aAAc,EAAM,gBAAkB,EAAM,gBAAgB,SAAW,KACvE,WAAY,EAAM,gBAAkB,EAAM,gBAAgB,SAAS,KAAK,OAAS,KACjF,SAAU,EAAM,gBAAkB,EAAM,gBAAgB,SAAS,KAAK,KAAO,SAGhF,MAAK,KACF,IAAK,SAAS,GAAI,MAAM,MAAM,SAAS,WACnC,IAEP,OAAM,QAInB","file":"worker.js","sourceRoot":"","sourcesContent":["let cacheNames = {\n    code: `code-${__CACHENAME}`,\n    asset: \"asset-v1\"\n};\n\nlet resources = self.__WB_MANIFEST;\n\nself.addEventListener('install', function (event) {\n    let dividedAssets = resources.reduce((acc, next) => {\n        if (next.url.indexOf(\"favicons/\") > -1) {\n            acc.asset.push(next.url);\n        }\n        else {\n            acc.code.push(next.url);\n        }\n        return acc;\n    }, { asset: [], code: [] });\n    let definedCaches = [\n        {\n            name: cacheNames.code,\n            assets: [\n                ...dividedAssets.code\n            ]\n        },\n        {\n            name: cacheNames.asset,\n            assets: dividedAssets.asset,\n        }\n    ];\n    event.waitUntil((async () => {\n        let tasks = definedCaches.map(async c => {\n            let cache = await caches.open(c.name);\n            await cache.addAll(Array.from(new Set(c.assets)));\n        });\n        await Promise.all(tasks);\n    })());\n});\n\n\nself.addEventListener('fetch', function (event) {\n    if (event.request.mode === \"navigate\") {\n        if (event.request.method !== \"GET\") {\n            return;\n        }\n        event.respondWith(caches.match(\"index.html\", { cacheName: cacheNames.code }).then(response => {\n            return response || fetch(event.request);\n        }));\n        return;\n    }\n    event.respondWith(\n        caches.match(event.request).then(async (response) => {\n            if (response) {\n                return response;\n            }\n            else {\n                let res = await fetch(event.request);\n                return res;\n            }\n        })\n    );\n});\n\nself.addEventListener('activate', function (event) {\n    console.log(\"service worker activated\")\n    event.waitUntil((async () => {\n        let storedCaches = await caches.keys();\n        let expectedCaches = Object.values(cacheNames);\n        let tasks = storedCaches.filter(c => expectedCaches.indexOf(c) < 0).map(async c => {\n            await caches.delete(c);\n        })\n        await Promise.all(tasks);\n    })());\n});\n\n\nself.addEventListener(\"push\", event => {\n    console.log(\"got push data\");\n    console.log(event.data.text())\n    const title = 'Antischwitzomat';\n    const options = {\n        body: event.data.text(),\n        icon: 'favicons/android-chrome-192x192.png',\n        badge: 'favicons/android-chrome-192x192.png'\n    };\n\n    event.waitUntil(\n        self.registration.showNotification(title, options)\n    );\n});\n\n\nfunction cleanRootUrl(u) {\n    if (u.length > 1 && u[u.length-1] == \"/\") {\n        return u.substring(0, u.length-1);\n    }\n    return u;\n}\n\nself.addEventListener(\"notificationclick\", event => {\n    const rootUrl = new URL(__BASEURL, location).href;\n    event.notification.close();\n    event.waitUntil(clients.matchAll().then(matchedClients => {\n        for (let client of matchedClients) {\n            console.log(`comparing client url ${client.url} with ${rootUrl}`);\n            if ((client.url|| \"\").startsWith(cleanRootUrl(rootUrl))) {\n                return client.focus();\n            }\n        }\n        console.log(`opening ${__BASEURL}`);\n        return clients.openWindow(__BASEURL);\n    })\n    );\n});\n\n\nself.addEventListener('pushsubscriptionchange', function (event) {\n    event.waitUntil(\n        fetch('https://antischwitzomat.glitch.me/pushsubscriptionchange', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                old_endpoint: event.oldSubscription ? event.oldSubscription.endpoint : null,\n                new_endpoint: event.newSubscription ? event.newSubscription.endpoint : null,\n                new_p256dh: event.newSubscription ? event.newSubscription.toJSON().keys.p256dh : null,\n                new_auth: event.newSubscription ? event.newSubscription.toJSON().keys.auth : null\n            })\n        })\n            .then(() => {\n                if (!response.ok) throw Error(response.statusText);\n                else;//update wurde gesendet\n            })\n            .catch(error => {\n                //update wurde nicht gesendet\n            })\n    );\n});"]}