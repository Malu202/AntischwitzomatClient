{"version":3,"sources":["webpack:///./src/components/debug/debug.html","webpack:///./src/components/debug/debug.js"],"names":["module","exports","DebugComponent","HTMLElement","super","this","innerHTML","log","querySelector","temp","hum","pres","sendButton","deleteButton","sensor_id","refresh","addEventListener","then","id","value","response","table","document","createElement","className","thead","hr","createHead","td","innerText","appendChild","tbody","i","length","row","createCell","Date","time","toLocaleString","temperature","humidity","pressure","ontime","voltage","customElements","define"],"mappings":"0EAGAA,EAAOC,QAFI,sX,gCCDX,gFAQO,MAAMC,UAAuBC,YAEhC,cACIC,QACAC,KAAKC,UAAY,EAGrB,oBACID,KAAKE,IAAMF,KAAKG,cAAc,WAC9BH,KAAKI,KAAOJ,KAAKG,cAAc,SAC/BH,KAAKK,IAAML,KAAKG,cAAc,QAC9BH,KAAKM,KAAON,KAAKG,cAAc,SAC/BH,KAAKO,WAAaP,KAAKG,cAAc,SACrCH,KAAKQ,aAAeR,KAAKG,cAAc,WACvCH,KAAKS,UAAYT,KAAKG,cAAc,cACpCH,KAAKU,UAELV,KAAKQ,aAAaG,iBAAiB,QAAS,IACxC,cAAiBC,KAAK,KAClBZ,KAAKU,aAEbV,KAAKO,WAAWI,iBAAiB,QAAS,KACtC,IAAIE,EAC4BA,EAAJ,IAAxBb,KAAKS,UAAUK,MAAkB,IAC3Bd,KAAKS,UAAUK,MACzB,YAAgBD,EAAIb,KAAKI,KAAKU,MAC1Bd,KAAKK,IAAIS,MACTd,KAAKM,KAAKQ,OAAOF,KAAK,IAClBZ,KAAKU,aAIrB,UACI,cAAkBE,KAAKG,IACnBf,KAAKE,IAAID,UAAY,GACrB,IAAIe,EAAQC,SAASC,cAAc,SAEnCF,EAAMG,UAAY,cAClB,IAAIC,EAAQH,SAASC,cAAc,SAC/BG,EAAKJ,SAASC,cAAc,MAChC,IAAII,EAAcR,IACd,IAAIS,EAAKN,SAASC,cAAc,MAChCK,EAAGC,UAAYV,EACfO,EAAGI,YAAYF,IAEnBD,EAAW,QACXA,EAAW,aACXA,EAAW,eACXA,EAAW,YACXA,EAAW,YACXA,EAAW,WACXA,EAAW,WACXF,EAAMK,YAAYJ,GAClB,IAAIK,EAAQT,SAASC,cAAc,SACnCF,EAAMS,YAAYL,GAClBJ,EAAMS,YAAYC,GAClB,IAAK,IAAIC,EAAIZ,EAASa,OAAS,EAAGD,GAAK,EAAGA,IAAK,CAC3C,IAAIE,EAAMZ,SAASC,cAAc,MACjCQ,EAAMD,YAAYI,GAClB,IAAIC,EAAchB,IACd,IAAIS,EAAKN,SAASC,cAAc,MAChCK,EAAGC,UAAYV,EACfe,EAAIJ,YAAYF,IAEpBO,EAAW,IAAIC,KAAKhB,EAASY,GAAGK,MAAMC,kBACtCH,EAAWf,EAASY,GAAGlB,WACvBqB,EAAWf,EAASY,GAAGO,YAAc,MACrCJ,EAAWf,EAASY,GAAGQ,SAAW,KAClCL,EAAWf,EAASY,GAAGS,SAAW,QAElC,IAAIC,EAAS,IACa,MAAtBtB,EAASY,GAAGU,SAAgBA,EAAStB,EAASY,GAAGU,OAAS,MAC9DP,EAAWO,GAEX,IAAIC,EAAU,IACa,MAAvBvB,EAASY,GAAGW,UAAiBA,EAAUvB,EAASY,GAAGW,SACvDR,EAAWQ,GAEftC,KAAKE,IAAIuB,YAAYT,MAKjCuB,eAAeC,OAAO,sBAAuB3C","file":"1.5a924ac2842a0d1462cc.bundle.js","sourcesContent":["// Module\nvar code = \"<div id=debugTools> <button id=delete>delete database</button> <input id=temp type=text placeholder=\\\"Temperature in °C\\\"> <input id=hum type=text placeholder=\\\"Humidity in %\\\"> <input id=pres type=text placeholder=\\\"Pressure in mbar\\\"> <button id=send>submit</button> <div> <input type=text id=sensor_id placeholder=\\\"Sensor Id (optional)\\\"> </div> <div id=output></div> </div>\";\n// Exports\nmodule.exports = code;","import * as template from \"./debug.html\";\nimport { environment } from \"../../environment\";\nimport {\n    getMeasurements,\n    sendMeasurement,\n    deleteDatabase\n} from \"../../api/api\";\n\nexport class DebugComponent extends HTMLElement {\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n    }\n\n    connectedCallback() {\n        this.log = this.querySelector(\"#output\");\n        this.temp = this.querySelector(\"#temp\");\n        this.hum = this.querySelector(\"#hum\");\n        this.pres = this.querySelector(\"#pres\");\n        this.sendButton = this.querySelector(\"#send\");\n        this.deleteButton = this.querySelector(\"#delete\");\n        this.sensor_id = this.querySelector(\"#sensor_id\");\n        this.refresh();\n\n        this.deleteButton.addEventListener(\"click\", () =>\n            deleteDatabase().then(() => {\n                this.refresh();\n            }));\n        this.sendButton.addEventListener(\"click\", () => {\n            let id;\n            if (this.sensor_id.value == \"\") id = \"0\";\n            else id = this.sensor_id.value;\n            sendMeasurement(id, this.temp.value,\n                this.hum.value,\n                this.pres.value).then(() =>\n                    this.refresh());\n        });\n    }\n\n    refresh() {\n        getMeasurements().then(response => {\n            this.log.innerHTML = \"\";\n            var table = document.createElement(\"table\");\n\n            table.className = \"debug-table\";\n            var thead = document.createElement(\"thead\");\n            var hr = document.createElement(\"tr\");\n            let createHead = (value) => {\n                let td = document.createElement(\"td\");\n                td.innerText = value;\n                hr.appendChild(td);\n            };\n            createHead(\"Time\");\n            createHead(\"Sensor ID\");\n            createHead(\"Temperature\");\n            createHead(\"Humidity\");\n            createHead(\"Pressure\");\n            createHead(\"On time\");\n            createHead(\"Battery\");\n            thead.appendChild(hr);\n            var tbody = document.createElement(\"tbody\");\n            table.appendChild(thead);\n            table.appendChild(tbody);\n            for (var i = response.length - 1; i >= 0; i--) {\n                let row = document.createElement(\"tr\");\n                tbody.appendChild(row);\n                let createCell = (value) => {\n                    let td = document.createElement(\"td\");\n                    td.innerText = value;\n                    row.appendChild(td);\n                };\n                createCell(new Date(response[i].time).toLocaleString());\n                createCell(response[i].sensor_id);\n                createCell(response[i].temperature + \"°C\");\n                createCell(response[i].humidity + \"%\");\n                createCell(response[i].pressure + \"mbar\");\n\n                let ontime = \"-\";\n                if (response[i].ontime != null) ontime = response[i].ontime + \"ms\";\n                createCell(ontime);\n\n                let voltage = \"-\";\n                if (response[i].voltage != null) voltage = response[i].voltage;\n                createCell(voltage);\n            }\n            this.log.appendChild(table);\n        });\n    }\n\n}\ncustomElements.define('app-debug-component', DebugComponent);"],"sourceRoot":""}